<?phprequire_once($_SERVER["DOCUMENT_ROOT"] . "/utility/db.php");require_once($_SERVER["DOCUMENT_ROOT"] . "/structs/game.php");require_once($_SERVER["DOCUMENT_ROOT"] . "/structs/user.php");require_once($_SERVER["DOCUMENT_ROOT"] . "/structs/charity.php");class Pool { 	private $challenge_id;	private $user_id;	private $user;	private $game_id;	private $game;	private $amount;		 public function Pool($row) 	{        if(isset($row)){			$this->challenge_id= $row['challenge_id'];			$this->user_id= $row['user_id'];			$this->game_id= $row['game_id'];			$this->amount = $row['amount'];		}    }		public function get_challenge_id() { return $this->challenge_id; }	public function get_user_id(){ return $this->user_id; }		public function get_user(){ 		if(!isset($this->user))			$this->user = User::getUserById($this->user_id);		return $this->user; 	}		public function get_game_id(){ return $this->game_id; }	public function get_game(){ 		if(!isset($this->game) && isset($this->game_id))			$this->game = Game::getGameById($this->game_id);		return $this->game; 	}		public function get_amount(){ return $this->amount; }		public function set_user_id($val){ $this->user_id = $val; }	public function set_game_id($val){ $this->game_id = $val; }	public function set_amount($val){ $this->amount = $val; }		public function delete(){		 Pool::deleteChallenge($this->challenge_id);	 }		public function save()	{		if(!isset($this->challenge_id))		{			$this->create();		} else {			$this->update();		}	}		private function create()	{		$user_id = (int) $this->user_id;		$game_id = (int) $this->game_id;		$amount = (int) $this->amount;				$create = "INSERT INTO `pool` (`user_id`, `game_id`, `amount`) VALUES ('$user_id','$game_id','$amount')";		$result = db_execute($create);		$this->challenge_id = getLastId();	}		private function update()	{		$user_id = (int) $this->user_id;		$game_id = (int) $this->game_id;		$amount = (int) $this->amount;		$challenge_id = (int) $this->challenge_id;						$update = "UPDATE `pool` SET `user_id` = '$user_id', `game_id` = '$game_id', `amount` = '$amount' WHERE `challenge_id` = '$challenge_id'";		$result = db_execute($update);	}		public static function getObjects($sql)	{		$result = db_execute($sql);		$objects = array();		while ($row = mysqli_fetch_assoc($result)) {			$objects[] = new Pool($row);		}		return $objects;	}		public static function getChallengeById($challenge_id)	{		$challenge_id = (int) $challenge_id;		if(!is_int($challenge_id) || $challenge_id == 0)		{			return null;		}				$search = "SELECT * FROM pool WHERE `challenge_id` = '$challenge_id' LIMIT 1";		$result = Pool::getObjects($search);		if(count($result) > 0)			return $result[0];		return null;	}		public static function getActiveChallengesByUser($user_id)	{		$user_id = (int) $user_id;		if(!is_int($user_id) || $user_id == 0)		{			return null;		}				$search = "SELECT * FROM pool p,game g WHERE p.`user_id` = '$user_id' AND p.`game_id` = g.game_id AND g.`is_finished` = 0";		return Pool::getObjects($search);	}			public static function getChallengesByGame($game_id)	{		$game_id = (int) $game_id;		if(!is_int($game_id) || $game_id == 0)		{			return null;		}				$search = "SELECT * FROM pool p WHERE p.`game_id` = '$game_id'";		return Pool::getObjects($search);	}		public static function deleteChallenge($challenge_id)	{		$challenge_id = (int) $challenge_id;		if(!is_int($challenge_id) || $challenge_id == 0)		{			return null;		}			$delete = "DELETE FROM `pool` WHERE `challenge_id` = $challenge_id";		db_execute($delete);	}		public static function getPooledAmountFromGame($game_id)	{		$game_id = (int) $game_id;		if(!is_int($game_id) || $game_id == 0)		{			return 0;		}				$sum = "SELECT SUM(amount) FROM pool WHERE `game_id` = $game_id";				$result = db_execute($sum);		while ($row = mysqli_fetch_assoc($result)) {			$amount = $row["SUM(amount)"];			if($amount > 0)				return $amount;		}		return 0;	}		public static function getPooledAmount()	{		$sum = "SELECT SUM(amount) FROM pool";				$result = db_execute($sum);		while ($row = mysqli_fetch_assoc($result)) {			$amount = $row["SUM(amount)"];			if($amount > 0)				return $amount;		}		return 0;	}			public static function getFinishedChallengesByUser($user_id)	{		$user_id = (int) $user_id;		if(!is_int($user_id) || $user_id == 0)		{			return null;		}				$search = "SELECT * FROM pool p,game g WHERE p.`user_id` = '$user_id' AND p.`game_id` = g.game_id AND g.`is_finished` = 1";		return Pool::getObjects($search);	}		public static function getPaidAmountByUser($user_id)	{		$user_id = (int) $user_id;		if(!is_int($user_id) || $user_id == 0)		{			return 0;		}				$search = "SELECT sum(amount) FROM pool p, game g WHERE p.`user_id` = '$user_id' AND p.`game_id` = g.`game_id` AND g.`is_finished` = 1 GROUP BY p.`user_id`";		$result = db_execute($search);		while ($row = mysqli_fetch_assoc($result)) {			$amount = $row["sum(amount)"];			if($amount > 0)				return $amount;		}		return 0;	}}	?>